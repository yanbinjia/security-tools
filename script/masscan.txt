https://github.com/robertdavidgraham/masscan

masscan 扫描端口要比nmap快很多，可以考虑结合使用

#sudo masscan 192.168.31.1  --banners -p1-65535 --rate=1000 > zzz.txt

Discovered open port 8383/tcp on 192.168.31.1
Discovered open port 8190/tcp on 192.168.31.1
Discovered open port 8196/tcp on 192.168.31.1
Discovered open port 8382/tcp on 192.168.31.1
Discovered open port 80/tcp on 192.168.31.1
Discovered open port 784/tcp on 192.168.31.1
Discovered open port 8384/tcp on 192.168.31.1
Discovered open port 8080/tcp on 192.168.31.1
Discovered open port 8191/tcp on 192.168.31.1
Discovered open port 8192/tcp on 192.168.31.1
Discovered open port 5351/tcp on 192.168.31.1
Discovered open port 8193/tcp on 192.168.31.1
Discovered open port 8899/tcp on 192.168.31.1
Discovered open port 8098/tcp on 192.168.31.1
Discovered open port 8381/tcp on 192.168.31.1
Discovered open port 5081/tcp on 192.168.31.1
Discovered open port 8999/tcp on 192.168.31.1
Discovered open port 8195/tcp on 192.168.31.1
Discovered open port 8197/tcp on 192.168.31.1
Discovered open port 8387/tcp on 192.168.31.1
Discovered open port 53/tcp on 192.168.31.1
Discovered open port 8380/tcp on 192.168.31.1

转成一行端口号

#cat zzz.txt|awk -F" " '{print $4}'|awk -F"/" '{print $1} '|awk BEGIN{RS=EOF}'{gsub(/\n/,",");print}'
8383,8190,8196,8382,80,784,8384,8080,8191,8192,5351,8193,8899,8098,8381,5081,8999,8195,8197,8387,53,8380

#cat zzz.txt|awk -F" " '{print $4}'|awk -F"/" '{print $1} ' |xargs
8197 8191 8381 8195 8196 8190 8192 8382 5351 8098 8899 8383 8387 8999 8380 8384 784 8080 8193 80 53 5081

scan a network for web ports
$ masscan 10.11.0.0/16 -p80,443,8080 ––rate 1000000

scan a network for the top 10 ports
$ masscan 10.11.0.0/16 ‐‐top-ten ––rate 1000000

scan a network for all ports
$ masscan 10.11.0.0/16 -p0-65535 ––rate 1000000

详细参数：
<ip/range> IP地址范围，有三种有效格式，1、单独的IPv4地址 2、类似"10.0.0.1-10.0.0.233"的范围地址 3、CIDR地址 类似于"0.0.0.0/0"，多个目标可以用都好隔开

-p <ports,--ports <ports>> 指定端口进行扫描

--banners 获取banner信息，支持少量的协议

--rate <packets-per-second> 指定发包的速率

-c <filename>, --conf <filename> 读取配置文件进行扫描

--echo 将当前的配置重定向到一个配置文件中

-e <ifname> , --adapter <ifname> 指定用来发包的网卡接口名称

--adapter-ip <ip-address> 指定发包的IP地址

--adapter-port <port> 指定发包的源端口

--adapter-mac <mac-address> 指定发包的源MAC地址

--router-mac <mac address> 指定网关的MAC地址

--exclude <ip/range> IP地址范围黑名单，防止masscan扫描

--excludefile <filename> 指定IP地址范围黑名单文件

--includefile，-iL <filename> 读取一个范围列表进行扫描

--ping 扫描应该包含ICMP回应请求

--append-output 以附加的形式输出到文件

--iflist 列出可用的网络接口，然后退出

--retries 发送重试的次数，以1秒为间隔

--nmap 打印与nmap兼容的相关信息

--http-user-agent <user-agent> 设置user-agent字段的值

--show [open,close] 告诉要显示的端口状态，默认是显示开放端口

--noshow [open,close] 禁用端口状态显示

--pcap <filename> 将接收到的数据包以libpcap格式存储

--regress 运行回归测试，测试扫描器是否正常运行

--ttl <num> 指定传出数据包的TTL值，默认为255

--wait <seconds> 指定发送完包之后的等待时间，默认为10秒

--offline 没有实际的发包，主要用来测试开销

-sL 不执行扫描，主要是生成一个随机地址列表

--readscan <binary-files> 读取从-oB生成的二进制文件，可以转化为XML或者JSON格式.

--connection-timeout <secs> 抓取banners时指定保持TCP连接的最大秒数，默认是30秒。

